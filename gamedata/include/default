# Game Settings File
# _default
# Base defaults for all games

# Default settings. This group includes a lot of blanks just so that the comments are set (and the engine/game files will show blank values to remind people to set them).
fn_set_game_setting settings "backupdir" "\${lgsmdir}/backups" "Backup Directory"
fn_set_game_setting settings "map" "--EMPTY--" "Default map to load"
fn_set_game_setting settings "game_mod" "--EMPTY--" "Mod to load from gamedata/mods"
fn_set_game_setting settings "email" "email@example.com" "Email address for notification"
fn_set_game_setting settings "emaillog" "\${scriptlogdir}/\${servicename}-email.log" "Email Log"
fn_set_game_setting settings "emailnotification" "off" "Email notification (on|off)"
fn_set_game_setting settings "engine" "--EMPTY--" "Game Engine"
fn_set_game_setting settings "filesdir" "\${rootdir}/serverfiles" "Server Files Directory"
fn_set_game_setting settings "game" "--EMPTY--" "Name of game"
fn_set_game_setting settings "gamename" "--EMPTY--" "Name for subdirectory in GitHub repo"
fn_set_game_setting settings "ip" "0.0.0.0" "IP Address to bind for server"
fn_set_game_setting settings "lgsm_version" "${version}" "Version of LGSM that created this config"
fn_set_game_setting settings "lockselfname" ".\${servicename}.lock" "LGSM Lock File"
fn_set_game_setting settings "logdays" "7" "Number of days to retain logs"
fn_set_game_setting settings "maxplayers" "--EMPTY--" "Maximum player count"
fn_set_game_setting settings "port" "--EMPTY--" "Port to bind for server"

# These settings are in a second group, since they reference the first group.
fn_set_game_setting settings "consolelogdir" "\${lgsmserverdir}/log/console" "Console Log Dir"
fn_set_game_setting settings "consolelog" "\${consolelogdir}/\${servicename}-console.log" "Console Log"
fn_set_game_setting settings "consolelogdate" "\${consolelogdir}/\${servicename}-console-\$(date '+%d-%m-%Y-%H-%M-%S').log" "Console Log Rotation Filename"

fn_set_game_setting settings "scriptlogdir" "\${lgsmserverdir}/log/script" "Script Log Dir"
fn_set_game_setting settings "scriptlog" "\${scriptlogdir}/\${servicename}-script.log" "Script Log"
fn_set_game_setting settings "scriptlogdate" "\${scriptlogdir}/\${servicename}-script-\$(date '+%d-%m-%Y-%H-%M-%S').log" "Script Log Rotation Filename"

fn_set_game_setting settings "servercfg_suffix" ".cfg" "Suffix to put on the end of the server config. For file extensions, use \".ext\", setting to empty will use the bare server config name."
fn_set_game_setting settings "systemdir" "\${filesdir}/\${game}" "System Directory (root of game installation)"
fn_set_game_setting settings "gamelogdir" "\${systemdir}/logs" "Game log directory"

fn_set_game_setting settings "executabledir" "\${filesdir}" "Executable directory"
fn_set_game_setting settings "executable" "--EMPTY--" "Executable to invoke to start game server"

fn_set_game_setting settings "servercfgdir" "\${systemdir}/cfg" "Server config directory"
fn_set_game_setting settings "servercfg" "\${servicename}\${servercfg_suffix}" "Server config file for this instance"
fn_set_game_setting settings "servercfgdefault" "\${servercfgdir}/lgsm-default\${servercfg_suffix}" "Default server configuration file"
fn_set_game_setting settings "servercfgfullpath" "\${servercfgdir}/\${servercfg}" "Full path to server config"

# Set the default settings for the script
fn_set_game_setting settings "dependency_path" "\${filesdir}"

fn_set_game_setting settings "server_parms" "--EMPTY--" "Additional Server command-line arguments. Put the parameters that start with \"-\" first, then \"+\" parameters after"

# Script actions
fn_set_game_setting scriptactions "st" "start|command_start.sh|Start the server."
fn_set_game_setting scriptactions "sp" "stop|command_stop.sh|Stop the server."
fn_set_game_setting scriptactions "r" "restart|fn_restart|Restart the server."
fn_set_game_setting scriptactions "dd" "depsdetect|command_dev_detect_deps.sh|Detect Dependencies"
fn_set_game_setting scriptactions "gd" "game-dependencies|fn_fix_game_dependencies|Make sure that the correct libraries for this game are installed"
fn_set_game_setting scriptactions "u" "update|update_check.sh|Checks and applies updates from SteamCMD."
fn_set_game_setting scriptactions "uf" "update-functions|update_functions.sh|Removes all functions so latest can be downloaded."
fn_set_game_setting scriptactions "m" "monitor|command_monitor.sh|Checks that the server is running."
fn_set_game_setting scriptactions "et" "email-test|command_email_test.sh|Sends test monitor email."
fn_set_game_setting scriptactions "d" "details|command_details.sh|Displays useful infomation about the server."
fn_set_game_setting scriptactions "debug" "|command_debug.sh|See the output of the server directly to your terminal."
fn_set_game_setting scriptactions "dev" "dev-debug|command_dev_debug.sh|Toggle Developer Debug mode"
fn_set_game_setting scriptactions "i" "install|command_install.sh|Install the server."
fn_set_game_setting scriptactions "ai" "auto-install|fn_autoinstall|Install the server, without prompts."
fn_set_game_setting scriptactions "b" "backup|command_backup.sh|Create archive of the server."
fn_set_game_setting scriptactions "im" "install-mod|install_mod.sh|Install mods"

# Default fn_parms just loads the parms file. Still need to figure out how to handle "simple" parms.
fn_parms(){
	source "${settingsdir}/parms"
}
